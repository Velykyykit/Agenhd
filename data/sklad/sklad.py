from fpdf import FPDF
import os
import gspread
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from menu.keyboards import get_restart_keyboard

def get_sklad_menu():
    """–ú–µ–Ω—é —Å–∫–ª–∞–¥—É."""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üõí –ó—Ä–æ–±–∏—Ç–∏ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="order"))
    markup.add(InlineKeyboardButton("üìä –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ù–∞—è–≤–Ω—ñ—Å—Ç—å", callback_data="check_stock"))
    return markup

def handle_sklad(bot, message):
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Å–∫–ª–∞–¥—É."""
    bot.send_message(message.chat.id, "üì¶ –í–∏ —É —Ä–æ–∑–¥—ñ–ª—ñ —Å–∫–ª–∞–¥—É. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=get_sklad_menu())
    bot.send_message(message.chat.id, "üîÑ –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É:", reply_markup=get_restart_keyboard())

def get_all_stock():
    """–û—Ç—Ä–∏–º—É—î –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∑—ñ —Å–∫–ª–∞–¥—É."""
    CREDENTIALS_PATH = os.path.join("/app", os.getenv("CREDENTIALS_FILE"))
    gc = gspread.service_account(filename=CREDENTIALS_PATH)
    sh = gc.open_by_key(os.getenv("SHEET_SKLAD"))
    worksheet = sh.worksheet("SKLAD")

    data = worksheet.get_all_values()
    stock_items = []

    for row in data[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        stock_items.append({
            "id": row[0],
            "course": row[1],
            "name": row[2],
            "stock": int(row[3]) if row[3].isdigit() else 0,
            "available": int(row[4]) if row[4].isdigit() else 0,
            "price": int(row[5]) if row[5].isdigit() else 0
        })

    return stock_items

def show_all_stock(bot, message):
    """–ì–µ–Ω–µ—Ä—É—î PDF-—Ñ–∞–π–ª –∑—ñ —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä—ñ–≤ —ñ –Ω–∞–¥—Å–∏–ª–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É."""
    items = get_all_stock()

    # –ù–∞–∑–≤–∞ —Ñ–∞–π–ª—É (—É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤)
    filename = f"stock_{message.chat.id}.pdf"

    # –°—Ç–≤–æ—Ä—é—î–º–æ PDF-–¥–æ–∫—É–º–µ–Ω—Ç
    pdf = FPDF()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()
    pdf.set_font("Arial", style="", size=12)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    pdf.set_font("Arial", style="B", size=16)
    pdf.cell(200, 10, "üì¶ –ù–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ", ln=True, align="C")
    pdf.ln(10)

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é
    pdf.set_font("Arial", size=10)
    pdf.cell(20, 8, "ID", border=1, align="C")
    pdf.cell(50, 8, "–ö—É—Ä—Å", border=1, align="C")
    pdf.cell(50, 8, "–¢–æ–≤–∞—Ä", border=1, align="C")
    pdf.cell(20, 8, "–ù–∞ —Å–∫–ª–∞–¥—ñ", border=1, align="C")
    pdf.cell(20, 8, "–î–æ—Å—Ç—É–ø–Ω–æ", border=1, align="C")
    pdf.cell(20, 8, "–¶—ñ–Ω–∞", border=1, align="C")
    pdf.ln()

    # –î–æ–¥–∞—î–º–æ –¥–∞–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—é
    for item in items:
        pdf.cell(20, 8, str(item["id"]), border=1, align="C")
        pdf.cell(50, 8, item["course"], border=1, align="L")
        pdf.cell(50, 8, item["name"], border=1, align="L")
        pdf.cell(20, 8, str(item["stock"]), border=1, align="C")
        pdf.cell(20, 8, str(item["available"]), border=1, align="C")
        pdf.cell(20, 8, f"{item['price']}‚Ç¥", border=1, align="C")
        pdf.ln()

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ PDF
    pdf.output(filename)

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–∞–π–ª –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    with open(filename, "rb") as file:
        bot.send_document(message.chat.id, file, caption="üìÑ –û—Å—å —Å–ø–∏—Å–æ–∫ –Ω–∞—è–≤–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ.")

    # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
    os.remove(filename)

def show_courses_for_order(bot, message):
    """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å—ñ–≤ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."""
    CREDENTIALS_PATH = os.path.join("/app", os.getenv("CREDENTIALS_FILE"))
    gc = gspread.service_account(filename=CREDENTIALS_PATH)
    
    sh = gc.open_by_key(os.getenv("SHEET_SKLAD"))
    worksheet = sh.worksheet("dictionary")  # –í–∫–∞–∑–∞—Ç–∏ –Ω–∞–∑–≤—É –∞—Ä–∫—É—à–∞ –∑ –∫—É—Ä—Å–∞–º–∏

    courses = worksheet.col_values(1)  # –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –Ω–∞–∑–≤–∏ –∫—É—Ä—Å—ñ–≤
    markup = InlineKeyboardMarkup()

    for course in courses:
        markup.add(InlineKeyboardButton(course, callback_data=f"course_{course}"))

    bot.send_message(message.chat.id, "üìö –û–±–µ—Ä—ñ—Ç—å –∫—É—Ä—Å –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", reply_markup=markup)
