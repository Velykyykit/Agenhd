from fpdf import FPDF
import os
import gspread
import pytz
from datetime import datetime
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from menu.keyboards import get_restart_keyboard

def get_sklad_menu():
    """–ú–µ–Ω—é —Å–∫–ª–∞–¥—É."""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üõí –ó—Ä–æ–±–∏—Ç–∏ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="order"))
    markup.add(InlineKeyboardButton("üìä –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ù–∞—è–≤–Ω—ñ—Å—Ç—å", callback_data="check_stock"))
    return markup

def get_all_stock():
    """–û—Ç—Ä–∏–º—É—î –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∑—ñ —Å–∫–ª–∞–¥—É."""
    CREDENTIALS_PATH = os.path.join("/app", os.getenv("CREDENTIALS_FILE"))
    gc = gspread.service_account(filename=CREDENTIALS_PATH)
    sh = gc.open_by_key(os.getenv("SHEET_SKLAD"))
    worksheet = sh.worksheet("SKLAD")

    data = worksheet.get_all_values()
    stock_items = []

    for row in data[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        stock_items.append({
            "id": row[0],
            "course": row[1],
            "name": row[2],
            "stock": int(row[3]) if row[3].isdigit() else 0,
            "available": int(row[4]) if row[4].isdigit() else 0,
            "price": int(row[5]) if row[5].isdigit() else 0
        })

    return stock_items

def generate_pdf(filename, items, title):
    """–ì–µ–Ω–µ—Ä—É—î PDF-—Ñ–∞–π–ª –∑—ñ —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä—ñ–≤."""
    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —É –ö–∏—î–≤—ñ
    kyiv_tz = pytz.timezone("Europe/Kiev")
    now = datetime.now(kyiv_tz).strftime("%d.%m.%Y %H:%M")

    pdf = FPDF()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()
    
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —à—Ä–∏—Ñ—Ç –±–µ–∑ –µ–º–æ–¥–∑—ñ
    pdf.set_font("Arial", style="B", size=16)
    pdf.cell(200, 10, f"{title}", ln=True, align="C")
    pdf.ln(5)
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, f"–î–∞—Ç–∞ —Ç–∞ —á–∞—Å (–£–∫—Ä–∞—ó–Ω–∞): {now}", ln=True, align="C")
    pdf.ln(10)

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é
    pdf.set_font("Arial", size=10)
    pdf.cell(20, 8, "ID", border=1, align="C")
    pdf.cell(50, 8, "–ö—É—Ä—Å", border=1, align="C")
    pdf.cell(50, 8, "–¢–æ–≤–∞—Ä", border=1, align="C")
    pdf.cell(20, 8, "–ù–∞ —Å–∫–ª–∞–¥—ñ", border=1, align="C")
    pdf.cell(20, 8, "–î–æ—Å—Ç—É–ø–Ω–æ", border=1, align="C")
    pdf.cell(20, 8, "–¶—ñ–Ω–∞", border=1, align="C")
    pdf.ln()

    # –î–æ–¥–∞—î–º–æ –¥–∞–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—é
    for item in items:
        pdf.cell(20, 8, str(item["id"]), border=1, align="C")
        pdf.cell(50, 8, item["course"], border=1, align="L")
        pdf.cell(50, 8, item["name"], border=1, align="L")
        pdf.cell(20, 8, str(item["stock"]), border=1, align="C")
        pdf.cell(20, 8, str(item["available"]), border=1, align="C")
        pdf.cell(20, 8, f"{item['price']}‚Ç¥", border=1, align="C")
        pdf.ln()

    pdf.output(filename)

def show_all_stock(bot, message):
    """–°—Ç–≤–æ—Ä—é—î 2 PDF-—Ñ–∞–π–ª–∏ —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É."""
    items = get_all_stock()

    # –§–∞–π–ª 1: –£—Å—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–∞ —Å–∫–ª–∞–¥—ñ
    filename_all = f"stock_all_{message.chat.id}.pdf"
    generate_pdf(filename_all, items, "–ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ")

    # –§–∞–π–ª 2: –¢–æ–≤–∞—Ä–∏, —è–∫—ñ –º–æ–∂–Ω–∞ –∑–∞–º–æ–≤–∏—Ç–∏ (–¥–æ—Å—Ç—É–ø–Ω–æ > 0)
    available_items = [item for item in items if item["available"] > 0]
    filename_available = f"stock_available_{message.chat.id}.pdf"
    generate_pdf(filename_available, available_items, "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤")

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–∞–π–ª–∏
    with open(filename_all, "rb") as file:
        bot.send_document(message.chat.id, file, caption="üìÑ –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ.")

    with open(filename_available, "rb") as file:
        bot.send_document(message.chat.id, file, caption="üìÑ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤.")

    # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
    os.remove(filename_all)
    os.remove(filename_available)
