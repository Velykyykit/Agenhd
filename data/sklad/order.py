import logging
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Select, Button, Row, Column
from aiogram_dialog.widgets.text import Const
from aiogram_dialog.manager.manager import DialogManager
from aiogram import types

logger = logging.getLogger(__name__)

# –î–≤—ñ —Ç–∞–±–ª–∏—Ü—ñ Google Sheets
SHEET_DICTIONARY = "dictionary"

async def get_courses(dialog_manager: DialogManager, **kwargs):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫—É—Ä—Å—ñ–≤ —ñ–∑ —Ç–∞–±–ª–∏—Ü—ñ"""
    courses = await dialog_manager.middleware_data["gspread_client"].get_data(SHEET_DICTIONARY)
    courses = [{"name": course["course"], "short": course["short"]} for course in courses[:20]]  # –ù–µ –±—ñ–ª—å—à–µ 20 –∫—É—Ä—Å—ñ–≤
    return {"courses": courses}

def log_selected_course(c: types.CallbackQuery, w, m: DialogManager, item_id):
    """–í–∏–≤–µ–¥–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∫—É—Ä—Å—É –≤ –¥–µ–±–∞–≥"""
    logger.debug(f"[DEBUG] –û–±—Ä–∞–Ω–∏–π –∫—É—Ä—Å: {item_id}")
    m.dialog_data.update(selected_course=item_id)
    
order_dialog = Dialog(
    Window(
        Const("üìö –û–±–µ—Ä—ñ—Ç—å –∫—É—Ä—Å:"),
        Row(
            Column(
                Select(
                    text=lambda item: f"üéì {item['name']}",
                    id="select_course",
                    item_id_getter=lambda item: item["short"],
                    on_click=log_selected_course,
                    items="courses[:10]"
                )
            ),
            Column(
                Select(
                    text=lambda item: f"üéì {item['name']}",
                    id="select_course_2",
                    item_id_getter=lambda item: item["short"],
                    on_click=log_selected_course,
                    items="courses[10:]"
                )
            )
        ),
        state="OrderDialog:select_course",
        getter=get_courses  # –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤
    )
)
