from aiogram import Bot, types
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardButton, CallbackQuery
from menu.keyboards import get_restart_keyboard
from data.sklad.sklad import show_courses_for_order

# –û–≥–æ–ª–æ—à–µ–Ω–Ω—è FSM –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
class OrderForm(StatesGroup):
    waiting_for_course = State()
    waiting_for_quantity = State()

async def handle_order_callback(call: CallbackQuery, state: FSMContext, bot: Bot):
    """
    –û–±—Ä–æ–±–ª—è—î callback "order":
    - –ø–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å—ñ–≤ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è,
    - –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤–∏–±–æ—Ä—É –∫—É—Ä—Å—É.
    """
    await call.answer()
    await show_courses_for_order(bot, call.message)
    await state.set_state(OrderForm.waiting_for_course)

async def process_course_selection(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–æ–±–ª—è—î callback, —è–∫–∏–π –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "course_":
    - –∑–±–µ—Ä—ñ–≥–∞—î –≤–∏–±—ñ—Ä –∫—É—Ä—Å—É,
    - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Å—Ç–∞–Ω –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ.
    """
    selected_course = call.data[len("course_"):]
    await call.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏: {selected_course}")
    await state.update_data(course=selected_course)
    await call.message.answer("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:")
    await state.set_state(OrderForm.waiting_for_quantity)

async def process_quantity(message: types.Message, state: FSMContext, get_main_menu_func):
    """
    –û–±—Ä–æ–±–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:
    - –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è,
    - –æ—á–∏—â—É—î —Å—Ç–∞–Ω —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    quantity = message.text
    data = await state.get_data()
    selected_course = data.get("course", "–ù–µ–≤—ñ–¥–æ–º–æ")
    await message.answer(
        f"–í–∏ –∑–∞–º–æ–≤–ª—è—î—Ç–µ {quantity} –æ–¥–∏–Ω–∏—Ü—å –∫—É—Ä—Å—É {selected_course}. –î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
    )
    await state.clear()
    main_menu = get_main_menu_func()
    await message.answer("üìå –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", reply_markup=main_menu)
    restart_keyboard = await get_restart_keyboard()
    await message.answer("üîÑ –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É:", reply_markup=restart_keyboard)

def register_order_handlers(router, get_main_menu_func):
    """
    –†–µ—î—Å—Ç—Ä—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø—Ä–æ—Ü–µ—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É —Ä–æ—É—Ç–µ—Ä—ñ.
    get_main_menu_func ‚Äî —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
    """
    # –û–±—Ä–æ–±–Ω–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "order"
    router.callback_query.register(
        lambda call, state, bot: handle_order_callback(call, state, bot),
        F.data == "order"
    )
    # –û–±—Ä–æ–±–Ω–∏–∫ callback –¥–ª—è –≤–∏–±–æ—Ä—É –∫—É—Ä—Å—É (–ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "course_")
    router.callback_query.register(
        process_course_selection,
        lambda call: call.data.startswith("course_")
    )
    # –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ (–¥–ª—è —Å—Ç–∞–Ω—É waiting_for_quantity)
    router.message.register(
        lambda message, state: process_quantity(message, state, get_main_menu_func),
        OrderForm.waiting_for_quantity
    )
