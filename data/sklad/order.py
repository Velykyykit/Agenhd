import os
import gspread
from aiogram import types
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Select, Group
from aiogram_dialog.widgets.text import Const, Format
from aiogram.fsm.state import StatesGroup, State

SHEET_SKLAD = os.getenv("SHEET_SKLAD")
CREDENTIALS_PATH = os.path.join("/app", os.getenv("CREDENTIALS_FILE"))

gc = gspread.service_account(filename=CREDENTIALS_PATH)
sh = gc.open_by_key(SHEET_SKLAD)
worksheet_courses = sh.worksheet("dictionary")

class OrderSG(StatesGroup):
    select_course = State()

async def get_courses(**kwargs):
    """
    –ó—á–∏—Ç—É—î–º–æ –¥–æ 20 –∫—É—Ä—Å—ñ–≤.
    –£ –∫–æ–ª–æ–Ω–∫–∞—Ö 'course' —ñ 'short' –º–∞—é—Ç—å –±—É—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –¥–∞–Ω—ñ.
    """
    all_rows = worksheet_courses.get_all_records()
    # –û–±–º–µ–∂—É—î–º–æ –¥–æ 20
    courses = [{"name": row["course"], "short": row["short"]} for row in all_rows][:20]
    return {"courses": courses}

async def select_course(callback: types.CallbackQuery, widget, manager: DialogManager, item_id: str):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É –∫—É—Ä—Å—É.
    item_id = –∫–æ—Ä–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞ –∫—É—Ä—Å—É (row["short"]).
    """
    await callback.answer(f"–û–±—Ä–∞–Ω–æ –∫—É—Ä—Å: {item_id}")

course_window = Window(
    Const("üìö –û–±–µ—Ä—ñ—Ç—å –∫—É—Ä—Å:"),
    Group(
        Select(
            Format("üéì {item[name]}"),
            items="courses",               # —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å—ñ–≤ —ñ–∑ getter
            id="course_select",
            item_id_getter=lambda item: item["short"],
            on_click=select_course
        ),
        width=2,   # 2 –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º—É —Ä—è–¥–∫—É
        height=10  # –º–∞–∫—Å–∏–º—É–º 10 —Ä—è–¥–∫—ñ–≤ (—Ä–∞–∑–æ–º 20 –∫–Ω–æ–ø–æ–∫)
    ),
    state=OrderSG.select_course,
    getter=get_courses
)

order_dialog = Dialog(course_window)
