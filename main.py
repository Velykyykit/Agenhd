import os
import telebot
from menu.keyboards import get_phone_keyboard
from config.auth import AuthManager

# –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ Railway
TOKEN = os.getenv("TOKEN")
SHEET_ID = os.getenv("SHEET_ID")
CREDENTIALS_FILE = os.getenv("CREDENTIALS_FILE")

if not TOKEN or not SHEET_ID or not CREDENTIALS_FILE:
    raise ValueError("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")

auth_manager = AuthManager(SHEET_ID, CREDENTIALS_FILE)
bot = telebot.TeleBot(TOKEN)

# **–°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö**
user_data = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–ó–∞–ø–∏—Ç –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É."""
    markup = get_phone_keyboard()
    bot.send_message(
        message.chat.id,
        "–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:",
        reply_markup=markup
    )

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É –ø–∞–º'—è—Ç—ñ –±–æ—Ç–∞."""
    if message.contact:
        phone_number = auth_manager.clean_phone_number(message.contact.phone_number)

        print(f"[DEBUG] –û—Ç—Ä–∏–º–∞–Ω–æ –Ω–æ–º–µ—Ä: {phone_number}")

        try:
            user_name = auth_manager.check_user_in_database(phone_number)

            if user_name:
                # **–ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –≤ —Å–ª–æ–≤–Ω–∏–∫**
                user_data[message.chat.id] = {
                    "name": user_name,
                    "phone": phone_number
                }

                bot.send_message(
                    message.chat.id,
                    f"‚úÖ –í—ñ—Ç–∞—é, *{user_name}*! –í–∏ —É—Å–ø—ñ—à–Ω–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ. üéâ",
                    parse_mode="Markdown"
                )
            else:
                bot.send_message(
                    message.chat.id,
                    "‚ùå –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –±–∞–∑—ñ. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
                )

        except Exception as e:
            bot.send_message(
                message.chat.id,
                "‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
            )
            print(f"‚ùå –ü–û–ú–ò–õ–ö–ê: {e}")

@bot.message_handler(commands=['whoami'])
def who_am_i(message):
    """–ü–æ–≤–µ—Ä—Ç–∞—î —ñ–º'—è —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –≤—ñ–Ω –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π."""
    user_info = user_data.get(message.chat.id)
    
    if user_info:
        bot.send_message(
            message.chat.id,
            f"üë§ –í–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ —è–∫: *{user_info['name']}*\nüìû –í–∞—à –Ω–æ–º–µ—Ä: {user_info['phone']}",
            parse_mode="Markdown"
        )
    else:
        bot.send_message(
            message.chat.id,
            "‚ùå –í–∏ —â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞–ª–∏—Å—è. –ù–∞–¥—ñ—à–ª—ñ—Ç—å /start –¥–ª—è –ø–æ—á–∞—Ç–∫—É."
        )

if __name__ == "__main__":
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
    bot.remove_webhook()
    bot.polling(none_stop=True)
