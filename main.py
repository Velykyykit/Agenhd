import os
import telebot
from menu.keyboards import get_phone_keyboard, get_restart_keyboard  # –î–æ–¥–∞—î–º–æ get_restart_keyboard
from config.auth import AuthManager  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–ª–∞—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from data.sklad.sklad import handle_sklad  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Å–∫–ª–∞–¥—É


# –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ Railway
TOKEN = os.getenv("TOKEN")  
SHEET_ID = os.getenv("SHEET_ID")  
CREDENTIALS_FILE = os.getenv("CREDENTIALS_FILE")  

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—ñ –∑–º—ñ–Ω–Ω—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ
if not TOKEN:
    raise ValueError("‚ùå TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–º—ñ–Ω–Ω—ñ Railway.")
if not SHEET_ID:
    raise ValueError("‚ùå SHEET_ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–º—ñ–Ω–Ω—ñ Railway.")
if not CREDENTIALS_FILE:
    raise ValueError("‚ùå CREDENTIALS_FILE –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–º—ñ–Ω–Ω—ñ Railway.")

# –ü–µ—Ä–µ–¥–∞—î–º–æ —Ü—ñ –∑–º—ñ–Ω–Ω—ñ –≤ AuthManager
auth_manager = AuthManager(SHEET_ID, CREDENTIALS_FILE)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–ó–∞–ø–∏—Ç –Ω–∞ –Ω–∞–¥–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏ /start."""
    markup = get_phone_keyboard()  # –¢—ñ–ª—å–∫–∏ –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º"
    
    bot.send_message(
        message.chat.id,
        "üì≤ –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:",  
        reply_markup=markup  
    )

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    """–û–±—Ä–æ–±–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è."""
    if message.contact:
        phone_number = message.contact.phone_number
        phone_number = auth_manager.clean_phone_number(phone_number)  # –û—á–∏—â—É—î–º–æ –Ω–æ–º–µ—Ä

        print(f"[DEBUG] –û—Ç—Ä–∏–º–∞–Ω–æ –Ω–æ–º–µ—Ä: {phone_number}")

        try:
            user_data = auth_manager.check_user_in_database(phone_number)
            print(f"[DEBUG] –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ auth.py: {user_data}")

            if user_data:
                # –í–∏–¥–∞–ª—è—î–º–æ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º"
                remove_keyboard = ReplyKeyboardRemove()

                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                bot.send_message(
                    message.chat.id,
                    f"‚úÖ –í—ñ—Ç–∞—é, *{user_data['name']}*! –í–∏ —É—Å–ø—ñ—à–Ω–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ. üéâ",
                    parse_mode="Markdown",
                    reply_markup=remove_keyboard  # –í–∏–¥–∞–ª—è—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
                )

                # –ü–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é —Ç–∞ –∫–Ω–æ–ø–∫—É "–ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É"
                send_main_menu(message)

            else:
                bot.send_message(
                    message.chat.id,
                    "‚ùå –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –±–∞–∑—ñ. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
                )

        except Exception as e:
            bot.send_message(
                message.chat.id,
                "‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
            )
            print(f"‚ùå –ü–û–ú–ò–õ–ö–ê: {e}")

def send_main_menu(message):
    """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–æ—é '–ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É'."""
    bot.send_message(
        message.chat.id,
        "üìå –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=get_main_menu()
    )
    
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "üîÑ –ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É"
    bot.send_message(
        message.chat.id,
        "üîÑ –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É:",
        reply_markup=get_restart_keyboard()
    )

def get_main_menu():
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏: –°–∫–ª–∞–¥, –ó–∞–≤–¥–∞–Ω–Ω—è, –î–ª—è –º–µ–Ω–µ."""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üì¶ –°–∫–ª–∞–¥", callback_data="sklad"))
    markup.add(InlineKeyboardButton("üìù –ó–∞–≤–¥–∞–Ω–Ω—è", callback_data="tasks"))
    markup.add(InlineKeyboardButton("üôã‚Äç‚ôÇÔ∏è –î–ª—è –º–µ–Ω–µ", callback_data="forme"))
    return markup

@bot.callback_query_handler(func=lambda call: call.data in ["sklad", "tasks", "forme"])
def handle_main_menu(call):
    """–û–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä –∫–Ω–æ–ø–æ–∫ —É –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é."""
    if call.data == "sklad":
        handle_sklad(bot, call.message)  # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —Å–∫–ª–∞–¥—É
    
    elif call.data == "tasks":
        bot.send_message(call.message.chat.id, "üìù –†–æ–∑–¥—ñ–ª '–ó–∞–≤–¥–∞–Ω–Ω—è' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    
    elif call.data == "forme":
        bot.send_message(call.message.chat.id, "üôã‚Äç‚ôÇÔ∏è –†–æ–∑–¥—ñ–ª '–î–ª—è –º–µ–Ω–µ' —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

@bot.message_handler(func=lambda message: message.text == "üîÑ –ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É")
def restart_bot(message):
    """–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ 'üîÑ –ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É'."""
    bot.send_message(
        message.chat.id,
        "üîÑ –ü–æ—á–∏–Ω–∞—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É. –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=get_main_menu()
    )
    
    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É "üîÑ –ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É"
    bot.send_message(
        message.chat.id,
        "üîÑ –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É:",
        reply_markup=get_restart_keyboard()
    )

if __name__ == "__main__":
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
    
    bot.remove_webhook()  # –û—á–∏—â–∞—î–º–æ Webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
    bot.polling(none_stop=True)
